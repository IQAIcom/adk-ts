name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        type: string
      releaseNotes:
        description: 'Release notes'
        required: true
        type: text

permissions:
  contents: write
  packages: write

jobs:
  verify:
    name: Verify code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Lint
        run: npm run lint
        
      - name: Build
        run: npm run build
      
      - name: Run tests
        run: npm test
        
      # Security scan temporarily disabled for troubleshooting
      # - name: Run security scan
      #   uses: snyk/actions/node@master
      #   continue-on-error: false
      #   env:
      #     SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      #   with:
      #     args: --severity-threshold=high

  release:
    name: Create Release
    needs: verify
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install dependencies
        run: npm ci
        
      - name: Check Current Version
        id: current-version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"
          echo "Target version: ${{ github.event.inputs.version }}"
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        
      - name: Update version in package.json
        run: npm version ${{ github.event.inputs.version }} --no-git-tag-version
      
      - name: Build
        run: npm run build

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package.json package-lock.json
          git commit -m "chore: bump version to v${{ github.event.inputs.version }}"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Create Git Tag
        run: |
          git tag -a v${{ github.event.inputs.version }} -m "Release v${{ github.event.inputs.version }}"
          git push --tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create v${{ github.event.inputs.version }} \
            --title "Release v${{ github.event.inputs.version }}" \
            --notes "${{ github.event.inputs.releaseNotes }}"
      
      - name: Verify NPM authentication
        run: |
          echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > ~/.npmrc
          npm whoami
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to NPM
        run: |
          echo "Publishing version ${{ github.event.inputs.version }} to NPM..."
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} 